{
  "name": "Health Intake",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1040,
        220
      ],
      "id": "1afcfce5-8444-4e01-a041-cdd4d19b0b4a",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "DZaBabO9u605tAtZ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appl53dkUI0MlnpNS",
          "mode": "list",
          "cachedResultName": "HealthInfo",
          "cachedResultUrl": "https://airtable.com/appl53dkUI0MlnpNS"
        },
        "table": {
          "__rl": true,
          "value": "tblmto4sCKTGqr7lt",
          "mode": "list",
          "cachedResultName": "HealthInfo_new",
          "cachedResultUrl": "https://airtable.com/appl53dkUI0MlnpNS/tblmto4sCKTGqr7lt"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Intake": "={{ $fromAI(\"Intake\") }}",
            "Calories": "={{ $fromAI(\"Calories\") }}",
            "Exercise": "={{ $fromAI(\"Exercise\") }}",
            "CaloriesBurned": "={{ $fromAI(\"CaloriesBurned\") }}",
            "Weight": "={{ $fromAI(\"Weight\") }}",
            "Mood": "={{ $fromAI(\"Mood\") }}",
            "Date": "={{ $now }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Intake",
              "displayName": "Intake",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Calories",
              "displayName": "Calories",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Exercise",
              "displayName": "Exercise",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "CaloriesBurned",
              "displayName": "CaloriesBurned",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Weight",
              "displayName": "Weight",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Mood",
              "displayName": "Mood",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        1440,
        220
      ],
      "id": "6c5a1632-8f53-4892-9b0d-e8f7b61bf348",
      "name": "save_healthInfo",
      "credentials": {
        "airtableTokenApi": {
          "id": "XsabY1nWgS80ug7D",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appl53dkUI0MlnpNS",
          "mode": "list",
          "cachedResultName": "HealthInfo",
          "cachedResultUrl": "https://airtable.com/appl53dkUI0MlnpNS"
        },
        "table": {
          "__rl": true,
          "value": "tblmto4sCKTGqr7lt",
          "mode": "list",
          "cachedResultName": "HealthInfo_new",
          "cachedResultUrl": "https://airtable.com/appl53dkUI0MlnpNS/tblmto4sCKTGqr7lt"
        },
        "options": {},
        "sort": {
          "property": [
            {
              "field": "Date"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        1260,
        220
      ],
      "id": "928d5788-c82e-41ca-a9e9-f68f9eed942b",
      "name": "read_healthInfo",
      "credentials": {
        "airtableTokenApi": {
          "id": "XsabY1nWgS80ug7D",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Health Intake\n- Uses Siri as the input via a webhook.\n- Agent receives input and determines the calories via OpenAI model.\n- Utilizes Airtable to store data for retrieval.\n- User can use model to discuss data. ",
        "width": 580
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        560,
        -240
      ],
      "typeVersion": 1,
      "id": "1a5a0482-f923-4ceb-b903-a15ed3d99921",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "health",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        860,
        0
      ],
      "id": "bd49dce7-dc6b-46e2-82a3-d5013f5a0aad",
      "name": "Siri Request",
      "webhookId": "f62bbe57-5bac-4ac3-a3cd-57ce4f6d7299"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Siri Request').item.json.headers.query }}",
        "options": {
          "systemMessage": "=You are HealthIntake-AI, a personal health-logging assistant. Your job is to listen for informal “intake” or activity statements from the user, extract structured data (what happened, when, and estimated calories or mood), and output a JSON record ready to insert into an Airtable base named HealthIntake. You also answer follow-up queries about past entries (“How many calories did I eat yesterday?”, “What was my average mood last week?”, etc.) by querying the stored records and summarizing results.\n\nWhen the user speaks an intake or activity, you must:\n\nIdentify the entry_type: one of \"nutrition\", \"exercise\", or \"mood\".\n\nExtract a natural-language description.\n\nIf nutrition, estimate calories_in; if exercise, estimate calories_out; otherwise omit calories fields.\n\nCapture mood if mentioned, as \"mood\": \"<happy|sad|anxious|…>\".\n\nRecord a timestamp in ISO 8601 format (UTC).\n\nOutput exactly one JSON object with the following keys (omit nulls):\n\njson\nCopy\n{\n  \"timestamp\": \"2025-06-09T14:23:00Z\",\n  \"entry_type\": \"nutrition\",\n  \"description\": \"Turkey sandwich with lettuce and tomato\",\n  \"calories_in\": 350,\n  \"calories_out\": null,\n  \"mood\": \"content\"\n}\nWhen the user asks a query, you must:\n\nParse the natural-language question.\n\nGenerate a concise, accurate summary based on the stored entries (e.g., totals, averages, trends).\n\nReturn your answer in clear text, this needs to be voice response friendly.\n\nGeneral guidelines\n\nAlways assume best effort on calorie estimation based on common nutritional/exercise databases.\n\nNever produce any UI code or explanations of Airtable internals—only JSON for inserts or human-readable summaries.\n\nMaintain a friendly, encouraging tone.\n\n  Your system prompt ends here; await the user’s first entry."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1100,
        0
      ],
      "id": "5d3af3bc-db2e-4ac6-a34f-e54f1fa7aa95",
      "name": "Health Agent",
      "executeOnce": false,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1480,
        0
      ],
      "id": "63195597-9f8c-4c35-9bb6-4e4eee5397d6",
      "name": "Respond to Siri"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Health Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "save_healthInfo": {
      "ai_tool": [
        [
          {
            "node": "Health Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "read_healthInfo": {
      "ai_tool": [
        [
          {
            "node": "Health Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Siri Request": {
      "main": [
        [
          {
            "node": "Health Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Health Agent": {
      "main": [
        [
          {
            "node": "Respond to Siri",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0bb060a1-59c5-49c6-aa01-5096a16b14b9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c1cc2e18d32a91e26eb78bbc6373615a06451476e56efe94394fc82c93d00305"
  },
  "id": "xhLmUqhBXucfNGyx",
  "tags": []
}
